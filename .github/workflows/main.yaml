name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - master
  pull_request:
#    branches: [ master ]

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
#  super-lint:
#    # Name the Job
#    name: Lint code base
#    # Set the type of machine to run on
#    runs-on: ubuntu-latest
#
#    steps:
#      # Checks out a copy of your repository on the ubuntu-latest machine
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      # Runs the Super-Linter action
#      - name: Run Super-Linter
#        uses: github/super-linter@v3
#        env:
#          DEFAULT_BRANCH: main
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Package Analysis
  package-analysis:
    runs-on: ubuntu-18.04 # or 'macos-latest'; 'macos-10.15'; 'windows-latest'; 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2

      - uses: axel-op/dart-package-analyzer@v3
        # set an id for the current step
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # You can then use this id to retrieve the outputs in the next steps.
      # The following step shows how to exit the workflow with an error if the total score in percentage is below 50:
      - name: Check scores
        env:
          # NB: "analysis" is the id set above. Replace it with the one you used if different.
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          PERCENTAGE=$(( $TOTAL * 100 / $TOTAL_MAX ))
          if (( $PERCENTAGE < 50 ))
          then
            echo Score too low!
            exit 1
          fi
          
  # Matrix Testing:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          #flutter-version: '1.20.2'
          channel: 'stable'
      - run: dart --version
      - run: flutter --version
      - run: flutter pub get
        
      # Check for any formatting issues in the code.
      - run: flutter format --set-exit-if-changed .

      # Statically analyze the Dart code for any errors.
      - run: flutter analyze .

      # Run widget tests for our flutter project.
      #- run: flutter test
      
      # Build APK
      - run: flutter build apk
          
  # Build APP
  build-web:
    # Name the Job
    name: Build Flutter (Web)
    # Set the type of machine to run on
    runs-on: ubuntu-latest # or 'macos-latest'; 'macos-10.15'; 'windows-latest'; 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          #flutter-version: '1.20.2'
          channel: 'beta'
      - run: dart --version
      - run: flutter --version
      - run: flutter upgrade

      # Clean
      - run: flutter clean
      # Enable Web:
      - run: flutter config --enable-web
      # Get flutter dependencies.
      - run: flutter pub get

      # Build Web
      - run: flutter build web
      # Upload generated bin to the artifacts.
      - uses: actions/upload-artifact@v2
        with:
          name: release-web
          path: build/web
          retention-days: 1 # retention period [1,90]; default 90 days

  build_apk:
    name: Build Flutter (Android)
    runs-on: ubuntu-18.04 # or 'macos-latest'; 'macos-10.15'; 'windows-latest'; 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'beta' 'dev', 'alpha', default to: 'stable'
          #flutter-version: '1.22.x' # you can also specify exact version of flutter

      # Clean
      - run: flutter clean
      # Get flutter dependencies.
      - run: flutter pub get

      # Build Debug APK
#      - run: flutter build apk --debug --split-per-abi

      # Build Android
      #- run: flutter build apk --target-platform android-arm,android-arm64 --split-per-abi
      #- run: flutter build appbundle --target-platform android-arm,android-arm64
      #- run: flutter build appbundle
      - run: flutter build apk --release

      # Upload generated bin to the artifacts.
      - uses: actions/upload-artifact@v2
        with:
          name: release-android
          path: build/app/outputs/apk/release
          retention-days: 1 # retention period [1,90]; default 90 days

      # Upload generated debug bin to the artifacts.
#      - uses: actions/upload-artifact@v2
#        with:
#          name: debug-android
#          path: build/app/outputs/apk/debug
#          retention-days: 5 # retention period [1,90]; default 90 days

  build_ios:
    name: Build Flutter (iOS)
    runs-on: macos-10.15 # or 'macos-latest'; 'macos-10.15'; 'windows-latest'; 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # Setup the flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # 'beta' 'dev', 'alpha', default to: 'stable'
          #flutter-version: '1.22.x' # you can also specify exact version of flutter

      # Clean
      - run: flutter clean
      # Get flutter dependencies.
      - run: flutter pub get

      # Buidl iOS-debug
#      - run: flutter build ios --debug --no-codesign
      # Build iOS
      - run: flutter build ios --release --no-codesign

      # Upload generated bin to the artifacts.
      - uses: actions/upload-artifact@v2
        with:
          name: release-ios
          path: build/ios/iphoneos
          retention-days: 5 # retention period [1,90]; default 90 days
#       # Upload generated debug bin to the artifacts.
#       - uses: actions/upload-artifact@v2
#         with:
#           name: debug-ios
#           path: build/ios/iphoneos
#           retention-days: 5 # retention period [1,90]; default 90 days

